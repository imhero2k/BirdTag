{"ast":null,"code":"import { getAmplifyUserAgent, AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { jitteredBackoff, getDnsSuffix } from '@aws-amplify/core/internals/aws-client-utils';\nimport { createXmlErrorParser } from '../utils/parsePayload.mjs';\nimport '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { createRetryDecider } from '../utils/createRetryDecider.mjs';\nimport { LOCAL_TESTING_S3_ENDPOINT } from '../../constants.mjs';\nimport { assertValidationError } from '../../../../../errors/utils/assertValidationError.mjs';\nimport { StorageValidationErrorCode } from '../../../../../errors/types/validation.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 's3';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region, and input parameters.\n */\nconst endpointResolver = (options, apiInput) => {\n  const {\n    region,\n    useAccelerateEndpoint,\n    customEndpoint,\n    forcePathStyle\n  } = options;\n  let endpoint;\n  // 1. get base endpoint\n  if (customEndpoint) {\n    if (customEndpoint === LOCAL_TESTING_S3_ENDPOINT) {\n      endpoint = new AmplifyUrl(customEndpoint);\n    }\n    assertValidationError(!customEndpoint.includes('://'), StorageValidationErrorCode.InvalidCustomEndpoint);\n    endpoint = new AmplifyUrl(\"https://\".concat(customEndpoint));\n  } else if (useAccelerateEndpoint) {\n    // this ErrorCode isn't expose yet since forcePathStyle param isn't publicly exposed\n    assertValidationError(!forcePathStyle, StorageValidationErrorCode.ForcePathStyleEndpointNotSupported);\n    endpoint = new AmplifyUrl(\"https://s3-accelerate.\".concat(getDnsSuffix(region)));\n  } else {\n    endpoint = new AmplifyUrl(\"https://s3.\".concat(region, \".\").concat(getDnsSuffix(region)));\n  }\n  // 2. inject bucket name\n  if (apiInput !== null && apiInput !== void 0 && apiInput.Bucket) {\n    assertValidationError(isDnsCompatibleBucketName(apiInput.Bucket), StorageValidationErrorCode.DnsIncompatibleBucketName);\n    if (forcePathStyle || apiInput.Bucket.includes('.')) {\n      endpoint.pathname = \"/\".concat(apiInput.Bucket);\n    } else {\n      endpoint.host = \"\".concat(apiInput.Bucket, \".\").concat(endpoint.host);\n    }\n  }\n  return {\n    url: endpoint\n  };\n};\n/**\n * Determines whether a given string is DNS compliant per the rules outlined by\n * S3. Length, capitaization, and leading dot restrictions are enforced by the\n * DOMAIN_PATTERN regular expression.\n * @internal\n *\n * @see https://github.com/aws/aws-sdk-js-v3/blob/f2da6182298d4d6b02e84fb723492c07c27469a8/packages/middleware-bucket-endpoint/src/bucketHostnameUtils.ts#L39-L48\n * @see https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\n */\nconst isDnsCompatibleBucketName = bucketName => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\n/**\n * Error parser for the XML payload of S3 data plane error response. The error's\n * `Code` and `Message` locates directly at the XML root element.\n *\n * @example\n * ```\n * <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n * \t<Error>\n * \t\t<Code>NoSuchKey</Code>\n * \t\t<Message>The resource you requested does not exist</Message>\n * \t\t<Resource>/mybucket/myfoto.jpg</Resource>\n * \t\t<RequestId>4442587FB7D0A2F9</RequestId>\n * \t</Error>\n * \t```\n *\n * @internal\n */\nconst parseXmlError = createXmlErrorParser({\n  noErrorWrapping: true\n});\n/**\n * @internal\n */\nconst retryDecider = createRetryDecider(parseXmlError);\n/**\n * @internal\n */\nconst defaultConfig = {\n  service: SERVICE_NAME,\n  endpointResolver,\n  retryDecider,\n  computeDelay: jitteredBackoff,\n  userAgentValue: getAmplifyUserAgent(),\n  useAccelerateEndpoint: false,\n  uriEscapePath: false // Required by S3. See https://github.com/aws/aws-sdk-js-v3/blob/9ba012dfa3a3429aa2db0f90b3b0b3a7a31f9bc3/packages/signature-v4/src/SignatureV4.ts#L76-L83\n};\nexport { SERVICE_NAME, defaultConfig, isDnsCompatibleBucketName, parseXmlError, retryDecider };","map":{"version":3,"names":["DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","SERVICE_NAME","endpointResolver","options","apiInput","region","useAccelerateEndpoint","customEndpoint","forcePathStyle","endpoint","LOCAL_TESTING_S3_ENDPOINT","AmplifyUrl","assertValidationError","includes","StorageValidationErrorCode","InvalidCustomEndpoint","concat","ForcePathStyleEndpointNotSupported","getDnsSuffix","Bucket","isDnsCompatibleBucketName","DnsIncompatibleBucketName","pathname","host","url","bucketName","test","parseXmlError","createXmlErrorParser","noErrorWrapping","retryDecider","createRetryDecider","defaultConfig","service","computeDelay","jitteredBackoff","userAgentValue","getAmplifyUserAgent","uriEscapePath"],"sources":["/Users/saisaran/Desktop/BirdTag/UI/node_modules/@aws-amplify/storage/src/providers/s3/utils/client/s3data/base.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyUrl, getAmplifyUserAgent, } from '@aws-amplify/core/internals/utils';\nimport { getDnsSuffix, jitteredBackoff, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { createRetryDecider, createXmlErrorParser } from '../utils';\nimport { LOCAL_TESTING_S3_ENDPOINT } from '../../constants';\nimport { assertValidationError } from '../../../../../errors/utils/assertValidationError';\nimport { StorageValidationErrorCode } from '../../../../../errors/types/validation';\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nexport const SERVICE_NAME = 's3';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region, and input parameters.\n */\nconst endpointResolver = (options, apiInput) => {\n    const { region, useAccelerateEndpoint, customEndpoint, forcePathStyle } = options;\n    let endpoint;\n    // 1. get base endpoint\n    if (customEndpoint) {\n        if (customEndpoint === LOCAL_TESTING_S3_ENDPOINT) {\n            endpoint = new AmplifyUrl(customEndpoint);\n        }\n        assertValidationError(!customEndpoint.includes('://'), StorageValidationErrorCode.InvalidCustomEndpoint);\n        endpoint = new AmplifyUrl(`https://${customEndpoint}`);\n    }\n    else if (useAccelerateEndpoint) {\n        // this ErrorCode isn't expose yet since forcePathStyle param isn't publicly exposed\n        assertValidationError(!forcePathStyle, StorageValidationErrorCode.ForcePathStyleEndpointNotSupported);\n        endpoint = new AmplifyUrl(`https://s3-accelerate.${getDnsSuffix(region)}`);\n    }\n    else {\n        endpoint = new AmplifyUrl(`https://s3.${region}.${getDnsSuffix(region)}`);\n    }\n    // 2. inject bucket name\n    if (apiInput?.Bucket) {\n        assertValidationError(isDnsCompatibleBucketName(apiInput.Bucket), StorageValidationErrorCode.DnsIncompatibleBucketName);\n        if (forcePathStyle || apiInput.Bucket.includes('.')) {\n            endpoint.pathname = `/${apiInput.Bucket}`;\n        }\n        else {\n            endpoint.host = `${apiInput.Bucket}.${endpoint.host}`;\n        }\n    }\n    return { url: endpoint };\n};\n/**\n * Determines whether a given string is DNS compliant per the rules outlined by\n * S3. Length, capitaization, and leading dot restrictions are enforced by the\n * DOMAIN_PATTERN regular expression.\n * @internal\n *\n * @see https://github.com/aws/aws-sdk-js-v3/blob/f2da6182298d4d6b02e84fb723492c07c27469a8/packages/middleware-bucket-endpoint/src/bucketHostnameUtils.ts#L39-L48\n * @see https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\n */\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) &&\n    !IP_ADDRESS_PATTERN.test(bucketName) &&\n    !DOTS_PATTERN.test(bucketName);\n/**\n * Error parser for the XML payload of S3 data plane error response. The error's\n * `Code` and `Message` locates directly at the XML root element.\n *\n * @example\n * ```\n * <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n * \t<Error>\n * \t\t<Code>NoSuchKey</Code>\n * \t\t<Message>The resource you requested does not exist</Message>\n * \t\t<Resource>/mybucket/myfoto.jpg</Resource>\n * \t\t<RequestId>4442587FB7D0A2F9</RequestId>\n * \t</Error>\n * \t```\n *\n * @internal\n */\nexport const parseXmlError = createXmlErrorParser({ noErrorWrapping: true });\n/**\n * @internal\n */\nexport const retryDecider = createRetryDecider(parseXmlError);\n/**\n * @internal\n */\nexport const defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider,\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    useAccelerateEndpoint: false,\n    uriEscapePath: false, // Required by S3. See https://github.com/aws/aws-sdk-js-v3/blob/9ba012dfa3a3429aa2db0f90b3b0b3a7a31f9bc3/packages/signature-v4/src/SignatureV4.ts#L76-L83\n};\n"],"mappings":";;;;;;;;;;;;AAAA;AACA;AAOA,MAAMA,cAAc,GAAG,oCAAoC;AAC3D,MAAMC,kBAAkB,GAAG,eAAe;AAC1C,MAAMC,YAAY,GAAG,MAAM;AAC3B;AACA;AACA;AACY,MAACC,YAAY,GAAG;AAC5B;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;EAC5C,MAAM;IAAEC,MAAM;IAAEC,qBAAqB;IAAEC,cAAc;IAAEC;EAAc,CAAE,GAAGL,OAAO;EACjF,IAAIM,QAAQ;EAChB;EACI,IAAIF,cAAc,EAAE;IAChB,IAAIA,cAAc,KAAKG,yBAAyB,EAAE;MAC9CD,QAAQ,GAAG,IAAIE,UAAU,CAACJ,cAAc,CAAC;IACrD;IACQK,qBAAqB,CAAC,CAACL,cAAc,CAACM,QAAQ,CAAC,KAAK,CAAC,EAAEC,0BAA0B,CAACC,qBAAqB,CAAC;IACxGN,QAAQ,GAAG,IAAIE,UAAU,YAAAK,MAAA,CAAYT,cAAc,CAAE,CAAC;EAC9D,OACS,IAAID,qBAAqB,EAAE;IACpC;IACQM,qBAAqB,CAAC,CAACJ,cAAc,EAAEM,0BAA0B,CAACG,kCAAkC,CAAC;IACrGR,QAAQ,GAAG,IAAIE,UAAU,0BAAAK,MAAA,CAA0BE,YAAY,CAACb,MAAM,CAAC,CAAE,CAAC;EAClF,OACS;IACDI,QAAQ,GAAG,IAAIE,UAAU,eAAAK,MAAA,CAAeX,MAAM,OAAAW,MAAA,CAAIE,YAAY,CAACb,MAAM,CAAC,CAAE,CAAC;EACjF;EACA;EACI,IAAID,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEe,MAAM,EAAE;IAClBP,qBAAqB,CAACQ,yBAAyB,CAAChB,QAAQ,CAACe,MAAM,CAAC,EAAEL,0BAA0B,CAACO,yBAAyB,CAAC;IACvH,IAAIb,cAAc,IAAIJ,QAAQ,CAACe,MAAM,CAACN,QAAQ,CAAC,GAAG,CAAC,EAAE;MACjDJ,QAAQ,CAACa,QAAQ,OAAAN,MAAA,CAAOZ,QAAQ,CAACe,MAAM,CAAE;IACrD,OACa;MACDV,QAAQ,CAACc,IAAI,MAAAP,MAAA,CAAMZ,QAAQ,CAACe,MAAM,OAAAH,MAAA,CAAIP,QAAQ,CAACc,IAAI,CAAE;IACjE;EACA;EACI,OAAO;IAAEC,GAAG,EAAEf;EAAQ,CAAE;AAC5B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACW,yBAAyB,GAAIK,UAAU,IAAK3B,cAAc,CAAC4B,IAAI,CAACD,UAAU,CAAC,IACpF,CAAC1B,kBAAkB,CAAC2B,IAAI,CAACD,UAAU,CAAC,IACpC,CAACzB,YAAY,CAAC0B,IAAI,CAACD,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACE,aAAa,GAAGC,oBAAoB,CAAC;EAAEC,eAAe,EAAE;AAAI,CAAE;AAC3E;AACA;AACA;AACY,MAACC,YAAY,GAAGC,kBAAkB,CAACJ,aAAa;AAC5D;AACA;AACA;AACY,MAACK,aAAa,GAAG;EACzBC,OAAO,EAAEhC,YAAY;EACrBC,gBAAgB;EAChB4B,YAAY;EACZI,YAAY,EAAEC,eAAe;EAC7BC,cAAc,EAAEC,mBAAmB,EAAE;EACrC/B,qBAAqB,EAAE,KAAK;EAC5BgC,aAAa,EAAE,KAAK;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}