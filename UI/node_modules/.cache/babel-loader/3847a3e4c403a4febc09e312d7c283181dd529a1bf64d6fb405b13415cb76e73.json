{"ast":null,"code":"/**\n * Format bytes as human-readable text.\n *\n * @param bytes Number of bytes.\n * @param si True to use metric (SI) units, aka powers of 1000. False to use\n *           binary (IEC), aka powers of 1024.\n * @param dp Number of decimal places to display.\n *\n * @return Formatted string.\n */\nfunction humanFileSize(bytes) {\n  let si = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let dp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  const thresh = si ? 1000 : 1024;\n  if (Math.abs(bytes) < thresh) {\n    return \"\".concat(bytes, \" B\");\n  }\n  const units = si ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n  let unit = -1;\n  const range = 10 ** dp;\n  do {\n    bytes /= thresh;\n    ++unit;\n  } while (Math.round(Math.abs(bytes) * range) / range >= thresh && unit < units.length - 1);\n  return bytes.toFixed(dp) + ' ' + units[unit];\n}\nexport { humanFileSize };","map":{"version":3,"names":["humanFileSize","bytes","si","arguments","length","undefined","dp","thresh","Math","abs","concat","units","unit","range","round","toFixed"],"sources":["/Users/saisaran/Desktop/BirdTag/UI/node_modules/@aws-amplify/ui/dist/esm/utils/humanFileSize.mjs"],"sourcesContent":["/**\n * Format bytes as human-readable text.\n *\n * @param bytes Number of bytes.\n * @param si True to use metric (SI) units, aka powers of 1000. False to use\n *           binary (IEC), aka powers of 1024.\n * @param dp Number of decimal places to display.\n *\n * @return Formatted string.\n */\nfunction humanFileSize(bytes, si = false, dp = 1) {\n    const thresh = si ? 1000 : 1024;\n    if (Math.abs(bytes) < thresh) {\n        return `${bytes} B`;\n    }\n    const units = si\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let unit = -1;\n    const range = 10 ** dp;\n    do {\n        bytes /= thresh;\n        ++unit;\n    } while (Math.round(Math.abs(bytes) * range) / range >= thresh &&\n        unit < units.length - 1);\n    return bytes.toFixed(dp) + ' ' + units[unit];\n}\n\nexport { humanFileSize };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAaA,CAACC,KAAK,EAAsB;EAAA,IAApBC,EAAE,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAAA,IAAEG,EAAE,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAC5C,MAAMI,MAAM,GAAGL,EAAE,GAAG,IAAI,GAAG,IAAI;EAC/B,IAAIM,IAAI,CAACC,GAAG,CAACR,KAAK,CAAC,GAAGM,MAAM,EAAE;IAC1B,UAAAG,MAAA,CAAUT,KAAK;EACnB;EACA,MAAMU,KAAK,GAAGT,EAAE,GACV,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAChD,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAC9D,IAAIU,IAAI,GAAG,CAAC,CAAC;EACb,MAAMC,KAAK,GAAG,EAAE,IAAIP,EAAE;EACtB,GAAG;IACCL,KAAK,IAAIM,MAAM;IACf,EAAEK,IAAI;EACV,CAAC,QAAQJ,IAAI,CAACM,KAAK,CAACN,IAAI,CAACC,GAAG,CAACR,KAAK,CAAC,GAAGY,KAAK,CAAC,GAAGA,KAAK,IAAIN,MAAM,IAC1DK,IAAI,GAAGD,KAAK,CAACP,MAAM,GAAG,CAAC;EAC3B,OAAOH,KAAK,CAACc,OAAO,CAACT,EAAE,CAAC,GAAG,GAAG,GAAGK,KAAK,CAACC,IAAI,CAAC;AAChD;AAEA,SAASZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}