{"ast":null,"code":"import _objectSpread from \"/Users/saisaran/Desktop/BirdTag/UI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/saisaran/Desktop/BirdTag/UI/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"children\", \"className\", \"isExclusive\", \"isSelectionRequired\", \"onChange\", \"size\", \"value\", \"variation\"];\nimport { classNames, ComponentClassName, isString } from '@aws-amplify/ui';\nimport * as React from 'react';\nimport { Flex } from '../Flex/Flex.mjs';\nimport { useToggleButtonGroup } from './useToggleButtonGroup.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nconst ToggleButtonGroupPrimitive = (_ref, ref) => {\n  let {\n      children,\n      className,\n      isExclusive,\n      isSelectionRequired,\n      onChange,\n      size,\n      value,\n      variation\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  const handleChange = useToggleButtonGroup({\n    onChange,\n    value,\n    isExclusive,\n    isSelectionRequired\n  });\n  return React.createElement(Flex, _objectSpread({\n    className: classNames(ComponentClassName.ToggleButtonGroup, className),\n    ref: ref,\n    role: \"group\"\n  }, rest), React.Children.map(children, child => {\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, {\n        isPressed: isExclusive ? value === child.props.value : isString(child.props.value) && value.includes(child.props.value),\n        onChange: handleChange,\n        size,\n        variation\n      });\n    }\n    return child;\n  }));\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/togglebutton#togglebuttongroup)\n */\nconst ToggleButtonGroup = primitiveWithForwardRef(ToggleButtonGroupPrimitive);\nToggleButtonGroup.displayName = 'ToggleButtonGroup';\nexport { ToggleButtonGroup };","map":{"version":3,"names":["classNames","ComponentClassName","isString","React","Flex","useToggleButtonGroup","primitiveWithForwardRef","ToggleButtonGroupPrimitive","_ref","ref","children","className","isExclusive","isSelectionRequired","onChange","size","value","variation","rest","_objectWithoutProperties","_excluded","handleChange","createElement","_objectSpread","ToggleButtonGroup","role","Children","map","child","isValidElement","cloneElement","isPressed","props","includes","displayName"],"sources":["/Users/saisaran/Desktop/BirdTag/UI/node_modules/@aws-amplify/ui-react/dist/esm/primitives/ToggleButtonGroup/ToggleButtonGroup.mjs"],"sourcesContent":["import { classNames, ComponentClassName, isString } from '@aws-amplify/ui';\nimport * as React from 'react';\nimport { Flex } from '../Flex/Flex.mjs';\nimport { useToggleButtonGroup } from './useToggleButtonGroup.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n\nconst ToggleButtonGroupPrimitive = ({ children, className, isExclusive, isSelectionRequired, onChange, size, value, variation, ...rest }, ref) => {\n    const handleChange = useToggleButtonGroup({\n        onChange,\n        value,\n        isExclusive,\n        isSelectionRequired,\n    });\n    return (React.createElement(Flex, { className: classNames(ComponentClassName.ToggleButtonGroup, className), ref: ref, role: \"group\", ...rest }, React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n            return React.cloneElement(child, {\n                isPressed: isExclusive\n                    ? value === child.props.value\n                    : isString(child.props.value) &&\n                        value.includes(child.props.value),\n                onChange: handleChange,\n                size,\n                variation,\n            });\n        }\n        return child;\n    })));\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/togglebutton#togglebuttongroup)\n */\nconst ToggleButtonGroup = primitiveWithForwardRef(ToggleButtonGroupPrimitive);\nToggleButtonGroup.displayName = 'ToggleButtonGroup';\n\nexport { ToggleButtonGroup };\n"],"mappings":";;;AAAA,SAASA,UAAU,EAAEC,kBAAkB,EAAEC,QAAQ,QAAQ,iBAAiB;AAC1E,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,oBAAoB,QAAQ,4BAA4B;AACjE,SAASC,uBAAuB,QAAQ,sCAAsC;AAE9E,MAAMC,0BAA0B,GAAGA,CAAAC,IAAA,EAAuGC,GAAG,KAAK;EAAA,IAA9G;MAAEC,QAAQ;MAAEC,SAAS;MAAEC,WAAW;MAAEC,mBAAmB;MAAEC,QAAQ;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAmB,CAAC,GAAAT,IAAA;IAANU,IAAI,GAAAC,wBAAA,CAAAX,IAAA,EAAAY,SAAA;EAClI,MAAMC,YAAY,GAAGhB,oBAAoB,CAAC;IACtCS,QAAQ;IACRE,KAAK;IACLJ,WAAW;IACXC;EACJ,CAAC,CAAC;EACF,OAAQV,KAAK,CAACmB,aAAa,CAAClB,IAAI,EAAAmB,aAAA;IAAIZ,SAAS,EAAEX,UAAU,CAACC,kBAAkB,CAACuB,iBAAiB,EAAEb,SAAS,CAAC;IAAEF,GAAG,EAAEA,GAAG;IAAEgB,IAAI,EAAE;EAAO,GAAKP,IAAI,GAAIf,KAAK,CAACuB,QAAQ,CAACC,GAAG,CAACjB,QAAQ,EAAGkB,KAAK,IAAK;IACpL,IAAIzB,KAAK,CAAC0B,cAAc,CAACD,KAAK,CAAC,EAAE;MAC7B,OAAOzB,KAAK,CAAC2B,YAAY,CAACF,KAAK,EAAE;QAC7BG,SAAS,EAAEnB,WAAW,GAChBI,KAAK,KAAKY,KAAK,CAACI,KAAK,CAAChB,KAAK,GAC3Bd,QAAQ,CAAC0B,KAAK,CAACI,KAAK,CAAChB,KAAK,CAAC,IACzBA,KAAK,CAACiB,QAAQ,CAACL,KAAK,CAACI,KAAK,CAAChB,KAAK,CAAC;QACzCF,QAAQ,EAAEO,YAAY;QACtBN,IAAI;QACJE;MACJ,CAAC,CAAC;IACN;IACA,OAAOW,KAAK;EAChB,CAAC,CAAC,CAAC;AACP,CAAC;AACD;AACA;AACA;AACA,MAAMJ,iBAAiB,GAAGlB,uBAAuB,CAACC,0BAA0B,CAAC;AAC7EiB,iBAAiB,CAACU,WAAW,GAAG,mBAAmB;AAEnD,SAASV,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}