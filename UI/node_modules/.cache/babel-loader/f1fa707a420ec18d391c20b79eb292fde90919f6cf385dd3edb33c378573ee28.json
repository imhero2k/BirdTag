{"ast":null,"code":"import _objectWithoutProperties from \"/Users/saisaran/Desktop/BirdTag/UI/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"_modifiers\", \"_element\", \"_vars\"],\n  _excluded2 = [\"_modifiers\", \"_element\", \"_vars\"];\nimport { propsToString } from './utils.mjs';\nimport '@aws-amplify/core/internals/utils';\nimport '../../utils/setUserAgent/constants.mjs';\nimport { isFunction, splitObject } from '../../utils/utils.mjs';\nfunction addVars(selector, vars) {\n  if (!vars) return '';\n  return \"\".concat(selector, \" { \").concat(Object.entries(vars).map(_ref => {\n    let [key, value] = _ref;\n    return \"--\".concat(key, \":\").concat(value, \"; \");\n  }).join(' '), \"}\\n\");\n}\nfunction recursiveComponentCSS(baseSelector, theme) {\n  let str = '';\n  const {\n      _modifiers = {},\n      _element = {},\n      _vars\n    } = theme,\n    props = _objectWithoutProperties(theme, _excluded);\n  // if there are no props, skip\n  if (Object.keys(props).length) {\n    // separate psuedo/attribute selectors\n    const [selectors, other] = splitObject(props, key => key.startsWith(':') || key.startsWith('['));\n    Object.entries(selectors).forEach(_ref2 => {\n      let [selector, value] = _ref2;\n      // need to remove nested things like vars and elements\n      const {\n          _modifiers = {},\n          _element = {},\n          _vars\n        } = value,\n        props = _objectWithoutProperties(value, _excluded2);\n      str += \"\".concat(baseSelector).concat(selector, \" { \").concat(propsToString(props), \" }\\n\");\n      str += addVars(\"\".concat(baseSelector).concat(selector), _vars);\n    });\n    str += \"\".concat(baseSelector, \" { \").concat(propsToString(other), \" }\\n\");\n  }\n  str += addVars(baseSelector, _vars);\n  Object.entries(_modifiers).forEach(_ref3 => {\n    let [key, value] = _ref3;\n    if (value && Object.keys(value).length) {\n      str += recursiveComponentCSS(\"\".concat(baseSelector, \"--\").concat(key), value);\n    }\n  });\n  Object.entries(_element).forEach(_ref4 => {\n    let [key, value] = _ref4;\n    if (value && Object.keys(value).length) {\n      str += recursiveComponentCSS(\"\".concat(baseSelector, \"__\").concat(key), value);\n    }\n  });\n  return str;\n}\n/**\n * This will take a component theme and create the appropriate CSS for it.\n *\n */\nfunction createComponentCSS(_ref5) {\n  let {\n    theme,\n    components\n  } = _ref5;\n  let cssText = '';\n  const {\n    tokens,\n    name: themeName,\n    breakpoints\n  } = theme;\n  components.forEach(_ref6 => {\n    let {\n      name,\n      theme,\n      overrides\n    } = _ref6;\n    const baseComponentClassName = \"amplify-\".concat(name);\n    const componentClassName = \"[data-amplify-theme=\\\"\".concat(themeName, \"\\\"] .\").concat(baseComponentClassName);\n    // unwrap the component theme\n    // if it is a function: call it with the defaultTheme to get a static object\n    const componentTheme = isFunction(theme) ? theme(tokens) : theme;\n    cssText += recursiveComponentCSS(componentClassName, componentTheme);\n    // if the component theme has overrides\n    // generate the appropriate CSS for each of them\n    if (overrides) {\n      overrides.forEach(override => {\n        // unwrap the override component theme just like above\n        const componentTheme = isFunction(override.theme) ? override.theme(tokens) : override.theme;\n        if ('mediaQuery' in override) {\n          cssText += \"@media (\".concat(override.mediaQuery, \") {\\n \").concat(recursiveComponentCSS(componentClassName, componentTheme), \" \\n}\");\n        }\n        if ('breakpoint' in override) {\n          const breakpoint = breakpoints.values[override.breakpoint];\n          cssText += \"\\n@media (min-width: \".concat(breakpoint, \"px) {\\n \").concat(recursiveComponentCSS(componentClassName, componentTheme), \" \\n}\");\n        }\n        if ('selector' in override) {\n          cssText += recursiveComponentCSS(\"\".concat(override.selector, \" .\").concat(baseComponentClassName), componentTheme);\n        }\n        if ('colorMode' in override) {\n          cssText += \"\\n@media (prefers-color-scheme: \".concat(override.colorMode, \") {\\n\").concat(recursiveComponentCSS(\"[data-amplify-theme=\\\"\".concat(themeName, \"\\\"][data-amplify-color-mode=\\\"system\\\"] .\").concat(baseComponentClassName), componentTheme), \"\\n}\\n\");\n          cssText += recursiveComponentCSS(\"[data-amplify-theme=\\\"\".concat(themeName, \"\\\"][data-amplify-color-mode=\\\"\").concat(override.colorMode, \"\\\"] .\").concat(baseComponentClassName), componentTheme);\n        }\n      });\n    }\n  });\n  return cssText;\n}\nexport { createComponentCSS, recursiveComponentCSS };","map":{"version":3,"names":["propsToString","isFunction","splitObject","addVars","selector","vars","concat","Object","entries","map","_ref","key","value","join","recursiveComponentCSS","baseSelector","theme","str","_modifiers","_element","_vars","props","_objectWithoutProperties","_excluded","keys","length","selectors","other","startsWith","forEach","_ref2","_excluded2","_ref3","_ref4","createComponentCSS","_ref5","components","cssText","tokens","name","themeName","breakpoints","_ref6","overrides","baseComponentClassName","componentClassName","componentTheme","override","mediaQuery","breakpoint","values","colorMode"],"sources":["/Users/saisaran/Desktop/BirdTag/UI/node_modules/@aws-amplify/ui/dist/esm/theme/createTheme/createComponentCSS.mjs"],"sourcesContent":["import { propsToString } from './utils.mjs';\nimport '@aws-amplify/core/internals/utils';\nimport '../../utils/setUserAgent/constants.mjs';\nimport { isFunction, splitObject } from '../../utils/utils.mjs';\n\nfunction addVars(selector, vars) {\n    if (!vars)\n        return '';\n    return `${selector} { ${Object.entries(vars)\n        .map(([key, value]) => {\n        return `--${key}:${value}; `;\n    })\n        .join(' ')}}\\n`;\n}\nfunction recursiveComponentCSS(baseSelector, theme) {\n    let str = '';\n    const { _modifiers = {}, _element = {}, _vars, ...props } = theme;\n    // if there are no props, skip\n    if (Object.keys(props).length) {\n        // separate psuedo/attribute selectors\n        const [selectors, other] = splitObject(props, (key) => key.startsWith(':') || key.startsWith('['));\n        Object.entries(selectors).forEach(([selector, value]) => {\n            // need to remove nested things like vars and elements\n            const { _modifiers = {}, _element = {}, _vars, ...props } = value;\n            str += `${baseSelector}${selector} { ${propsToString(props)} }\\n`;\n            str += addVars(`${baseSelector}${selector}`, _vars);\n        });\n        str += `${baseSelector} { ${propsToString(other)} }\\n`;\n    }\n    str += addVars(baseSelector, _vars);\n    Object.entries(_modifiers).forEach(([key, value]) => {\n        if (value && Object.keys(value).length) {\n            str += recursiveComponentCSS(`${baseSelector}--${key}`, value);\n        }\n    });\n    Object.entries(_element).forEach(([key, value]) => {\n        if (value && Object.keys(value).length) {\n            str += recursiveComponentCSS(`${baseSelector}__${key}`, value);\n        }\n    });\n    return str;\n}\n/**\n * This will take a component theme and create the appropriate CSS for it.\n *\n */\nfunction createComponentCSS({ theme, components, }) {\n    let cssText = '';\n    const { tokens, name: themeName, breakpoints } = theme;\n    components.forEach(({ name, theme, overrides }) => {\n        const baseComponentClassName = `amplify-${name}`;\n        const componentClassName = `[data-amplify-theme=\"${themeName}\"] .${baseComponentClassName}`;\n        // unwrap the component theme\n        // if it is a function: call it with the defaultTheme to get a static object\n        const componentTheme = isFunction(theme)\n            ? theme(tokens)\n            : theme;\n        cssText += recursiveComponentCSS(componentClassName, componentTheme);\n        // if the component theme has overrides\n        // generate the appropriate CSS for each of them\n        if (overrides) {\n            overrides.forEach((override) => {\n                // unwrap the override component theme just like above\n                const componentTheme = isFunction(override.theme)\n                    ? override.theme(tokens)\n                    : override.theme;\n                if ('mediaQuery' in override) {\n                    cssText += `@media (${override.mediaQuery}) {\\n ${recursiveComponentCSS(componentClassName, componentTheme)} \\n}`;\n                }\n                if ('breakpoint' in override) {\n                    const breakpoint = breakpoints.values[override.breakpoint];\n                    cssText += `\\n@media (min-width: ${breakpoint}px) {\\n ${recursiveComponentCSS(componentClassName, componentTheme)} \\n}`;\n                }\n                if ('selector' in override) {\n                    cssText += recursiveComponentCSS(`${override.selector} .${baseComponentClassName}`, componentTheme);\n                }\n                if ('colorMode' in override) {\n                    cssText += `\\n@media (prefers-color-scheme: ${override.colorMode}) {\\n${recursiveComponentCSS(`[data-amplify-theme=\"${themeName}\"][data-amplify-color-mode=\"system\"] .${baseComponentClassName}`, componentTheme)}\\n}\\n`;\n                    cssText += recursiveComponentCSS(`[data-amplify-theme=\"${themeName}\"][data-amplify-color-mode=\"${override.colorMode}\"] .${baseComponentClassName}`, componentTheme);\n                }\n            });\n        }\n    });\n    return cssText;\n}\n\nexport { createComponentCSS, recursiveComponentCSS };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}