{"ast":null,"code":"import _objectWithoutProperties from \"/Users/saisaran/Desktop/BirdTag/UI/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/saisaran/Desktop/BirdTag/UI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nconst _excluded = [\"challengeName\"];\nimport 'react';\nimport 'react-hook-form';\nimport '@aws-amplify/ui';\nimport '../../../components/FormCore/FormProvider.mjs';\nimport RenderNothing from '../../../components/RenderNothing/RenderNothing.mjs';\nimport { isComponentRouteKey } from '../utils.mjs';\nimport { MACHINE_PROP_KEYS, EVENT_HANDLER_KEY_MAP } from './constants.mjs';\n\n// only select `route` from machine context\nconst routeSelector = _ref => {\n  let {\n    route\n  } = _ref;\n  return [route];\n};\nconst createSelector = selectorKeys => context => {\n  const dependencies = selectorKeys.map(key => context[key]);\n  // route should always be part of deps, so hook knows when route changes.\n  return [...dependencies, context.route];\n};\nconst getRouteMachineSelector = route => isComponentRouteKey(route) ? createSelector(MACHINE_PROP_KEYS[route]) : routeSelector;\nconst isFormEventHandlerKey = key => ['updateBlur', 'updateForm', 'submitForm'].includes(key);\nconst convertEventHandlerKey = key => EVENT_HANDLER_KEY_MAP[key];\nconst getConvertedMachineProps = (route, context) => MACHINE_PROP_KEYS[route].reduce((acc, key) => _objectSpread(_objectSpread({}, acc), {}, {\n  [isFormEventHandlerKey(key) ? convertEventHandlerKey(key) : key]: context[key]\n}), {});\nfunction resolveConfirmResetPasswordRoute(Component, props) {\n  return {\n    Component,\n    props: _objectSpread(_objectSpread({}, Component), getConvertedMachineProps('confirmResetPassword', props))\n  };\n}\nfunction resolveConfirmSignInRoute(Component, props) {\n  const _getConvertedMachineP = getConvertedMachineProps('confirmSignIn', props),\n    {\n      challengeName\n    } = _getConvertedMachineP,\n    machineProps = _objectWithoutProperties(_getConvertedMachineP, _excluded);\n  return {\n    Component,\n    props: _objectSpread(_objectSpread(_objectSpread({}, Component), machineProps), {}, {\n      challengeName\n    })\n  };\n}\nfunction resolveConfirmSignUpRoute(Component, props) {\n  return {\n    Component,\n    props: _objectSpread(_objectSpread({}, Component), getConvertedMachineProps('confirmSignUp', props))\n  };\n}\nfunction resolveConfirmVerifyUserRoute(Component, props) {\n  return {\n    Component,\n    props: _objectSpread(_objectSpread({}, Component), getConvertedMachineProps('confirmVerifyUser', props))\n  };\n}\nfunction resolveForceNewPasswordRoute(Component, props) {\n  return {\n    Component,\n    props: _objectSpread(_objectSpread({}, Component), getConvertedMachineProps('forceNewPassword', props))\n  };\n}\nfunction resolveForgotPasswordRoute(Component, props) {\n  return {\n    Component,\n    props: _objectSpread(_objectSpread({}, Component), getConvertedMachineProps('forgotPassword', props))\n  };\n}\nfunction resolveSetupTotpRoute(Component, props) {\n  return {\n    Component,\n    props: _objectSpread(_objectSpread({}, Component), getConvertedMachineProps('setupTotp', props))\n  };\n}\nfunction resolveSetupEmailRoute(Component, props) {\n  return {\n    Component,\n    props: _objectSpread(_objectSpread({}, Component), getConvertedMachineProps('setupEmail', props))\n  };\n}\nfunction resolveSelectMfaTypeRoute(Component, props) {\n  return {\n    Component,\n    props: _objectSpread(_objectSpread({}, Component), getConvertedMachineProps('selectMfaType', props))\n  };\n}\nfunction resolveSignInRoute(Component, props) {\n  // default `hideSignUp` to false\n  const hideSignUp = false;\n  return {\n    Component,\n    props: _objectSpread(_objectSpread(_objectSpread({}, Component), getConvertedMachineProps('signIn', props)), {}, {\n      hideSignUp\n    })\n  };\n}\nfunction resolveSignUpRoute(Component, props) {\n  return {\n    Component,\n    props: _objectSpread(_objectSpread({}, Component), getConvertedMachineProps('signUp', props))\n  };\n}\nfunction resolveVerifyUserRoute(Component, props) {\n  return {\n    Component,\n    props: _objectSpread(_objectSpread({}, Component), getConvertedMachineProps('verifyUser', props))\n  };\n}\nfunction resolveDefault() {\n  return {\n    Component: RenderNothing,\n    props: {}\n  };\n}\nexport { getRouteMachineSelector, resolveConfirmResetPasswordRoute, resolveConfirmSignInRoute, resolveConfirmSignUpRoute, resolveConfirmVerifyUserRoute, resolveDefault, resolveForceNewPasswordRoute, resolveForgotPasswordRoute, resolveSelectMfaTypeRoute, resolveSetupEmailRoute, resolveSetupTotpRoute, resolveSignInRoute, resolveSignUpRoute, resolveVerifyUserRoute, routeSelector };","map":{"version":3,"names":["RenderNothing","isComponentRouteKey","MACHINE_PROP_KEYS","EVENT_HANDLER_KEY_MAP","routeSelector","_ref","route","createSelector","selectorKeys","context","dependencies","map","key","getRouteMachineSelector","isFormEventHandlerKey","includes","convertEventHandlerKey","getConvertedMachineProps","reduce","acc","_objectSpread","resolveConfirmResetPasswordRoute","Component","props","resolveConfirmSignInRoute","_getConvertedMachineP","challengeName","machineProps","_objectWithoutProperties","_excluded","resolveConfirmSignUpRoute","resolveConfirmVerifyUserRoute","resolveForceNewPasswordRoute","resolveForgotPasswordRoute","resolveSetupTotpRoute","resolveSetupEmailRoute","resolveSelectMfaTypeRoute","resolveSignInRoute","hideSignUp","resolveSignUpRoute","resolveVerifyUserRoute","resolveDefault"],"sources":["/Users/saisaran/Desktop/BirdTag/UI/node_modules/@aws-amplify/ui-react-core/dist/esm/Authenticator/hooks/useAuthenticatorRoute/utils.mjs"],"sourcesContent":["import 'react';\nimport 'react-hook-form';\nimport '@aws-amplify/ui';\nimport '../../../components/FormCore/FormProvider.mjs';\nimport RenderNothing from '../../../components/RenderNothing/RenderNothing.mjs';\nimport { isComponentRouteKey } from '../utils.mjs';\nimport { MACHINE_PROP_KEYS, EVENT_HANDLER_KEY_MAP } from './constants.mjs';\n\n// only select `route` from machine context\nconst routeSelector = ({ route }) => [route];\nconst createSelector = (selectorKeys) => (context) => {\n    const dependencies = selectorKeys.map((key) => context[key]);\n    // route should always be part of deps, so hook knows when route changes.\n    return [...dependencies, context.route];\n};\nconst getRouteMachineSelector = (route) => isComponentRouteKey(route)\n    ? createSelector(MACHINE_PROP_KEYS[route])\n    : routeSelector;\nconst isFormEventHandlerKey = (key) => ['updateBlur', 'updateForm', 'submitForm'].includes(key);\nconst convertEventHandlerKey = (key) => EVENT_HANDLER_KEY_MAP[key];\nconst getConvertedMachineProps = (route, context) => MACHINE_PROP_KEYS[route].reduce((acc, key) => ({\n    ...acc,\n    [isFormEventHandlerKey(key) ? convertEventHandlerKey(key) : key]: context[key],\n}), {});\nfunction resolveConfirmResetPasswordRoute(Component, props) {\n    return {\n        Component,\n        props: {\n            ...Component,\n            ...getConvertedMachineProps('confirmResetPassword', props),\n        },\n    };\n}\nfunction resolveConfirmSignInRoute(Component, props) {\n    const { challengeName, ...machineProps } = getConvertedMachineProps('confirmSignIn', props);\n    return { Component, props: { ...Component, ...machineProps, challengeName } };\n}\nfunction resolveConfirmSignUpRoute(Component, props) {\n    return {\n        Component,\n        props: {\n            ...Component,\n            ...getConvertedMachineProps('confirmSignUp', props),\n        },\n    };\n}\nfunction resolveConfirmVerifyUserRoute(Component, props) {\n    return {\n        Component,\n        props: {\n            ...Component,\n            ...getConvertedMachineProps('confirmVerifyUser', props),\n        },\n    };\n}\nfunction resolveForceNewPasswordRoute(Component, props) {\n    return {\n        Component,\n        props: {\n            ...Component,\n            ...getConvertedMachineProps('forceNewPassword', props),\n        },\n    };\n}\nfunction resolveForgotPasswordRoute(Component, props) {\n    return {\n        Component,\n        props: {\n            ...Component,\n            ...getConvertedMachineProps('forgotPassword', props),\n        },\n    };\n}\nfunction resolveSetupTotpRoute(Component, props) {\n    return {\n        Component,\n        props: {\n            ...Component,\n            ...getConvertedMachineProps('setupTotp', props),\n        },\n    };\n}\nfunction resolveSetupEmailRoute(Component, props) {\n    return {\n        Component,\n        props: {\n            ...Component,\n            ...getConvertedMachineProps('setupEmail', props),\n        },\n    };\n}\nfunction resolveSelectMfaTypeRoute(Component, props) {\n    return {\n        Component,\n        props: {\n            ...Component,\n            ...getConvertedMachineProps('selectMfaType', props),\n        },\n    };\n}\nfunction resolveSignInRoute(Component, props) {\n    // default `hideSignUp` to false\n    const hideSignUp = false;\n    return {\n        Component,\n        props: {\n            ...Component,\n            ...getConvertedMachineProps('signIn', props),\n            hideSignUp,\n        },\n    };\n}\nfunction resolveSignUpRoute(Component, props) {\n    return {\n        Component,\n        props: { ...Component, ...getConvertedMachineProps('signUp', props) },\n    };\n}\nfunction resolveVerifyUserRoute(Component, props) {\n    return {\n        Component,\n        props: {\n            ...Component,\n            ...getConvertedMachineProps('verifyUser', props),\n        },\n    };\n}\nfunction resolveDefault() {\n    return {\n        Component: RenderNothing,\n        props: {},\n    };\n}\n\nexport { getRouteMachineSelector, resolveConfirmResetPasswordRoute, resolveConfirmSignInRoute, resolveConfirmSignUpRoute, resolveConfirmVerifyUserRoute, resolveDefault, resolveForceNewPasswordRoute, resolveForgotPasswordRoute, resolveSelectMfaTypeRoute, resolveSetupEmailRoute, resolveSetupTotpRoute, resolveSignInRoute, resolveSignUpRoute, resolveVerifyUserRoute, routeSelector };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}