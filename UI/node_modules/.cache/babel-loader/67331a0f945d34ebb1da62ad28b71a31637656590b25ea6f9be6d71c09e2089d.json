{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst isNil = value => {\n  return value === undefined || value === null;\n};\nconst bothNilOrEqual = (original, output) => {\n  return isNil(original) && isNil(output) || original === output;\n};\n/**\n * This function is used to determine if a value is an object.\n * It excludes arrays and null values.\n *\n * @param value\n * @returns\n */\nconst isObject = value => {\n  return value != null && typeof value === 'object' && !Array.isArray(value);\n};\n/**\n * This function is used to compare two objects and determine if they are equal.\n * It handles nested objects and arrays as well.\n * Array order is not taken into account.\n *\n * @param object\n * @param other\n * @returns\n */\nconst isEqual = (object, other) => {\n  if (Array.isArray(object) && !Array.isArray(other)) {\n    return false;\n  }\n  if (!Array.isArray(object) && Array.isArray(other)) {\n    return false;\n  }\n  if (Array.isArray(object) && Array.isArray(other)) {\n    return object.length === other.length && object.every((val, ix) => isEqual(val, other[ix]));\n  }\n  if (!isObject(object) || !isObject(other)) {\n    return object === other;\n  }\n  const objectKeys = Object.keys(object);\n  const otherKeys = Object.keys(other);\n  if (objectKeys.length !== otherKeys.length) {\n    return false;\n  }\n  return objectKeys.every(key => {\n    return otherKeys.includes(key) && isEqual(object[key], other[key]);\n  });\n};\nexport { bothNilOrEqual, isEqual, isNil, isObject };","map":{"version":3,"names":["isNil","value","undefined","bothNilOrEqual","original","output","isObject","Array","isArray","isEqual","object","other","length","every","val","ix","objectKeys","Object","keys","otherKeys","key","includes"],"sources":["/Users/saisaran/Desktop/BirdTag/UI/node_modules/@aws-amplify/storage/src/providers/s3/utils/client/utils/integrityHelpers.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const isNil = (value) => {\n    return value === undefined || value === null;\n};\nexport const bothNilOrEqual = (original, output) => {\n    return (isNil(original) && isNil(output)) || original === output;\n};\n/**\n * This function is used to determine if a value is an object.\n * It excludes arrays and null values.\n *\n * @param value\n * @returns\n */\nexport const isObject = (value) => {\n    return value != null && typeof value === 'object' && !Array.isArray(value);\n};\n/**\n * This function is used to compare two objects and determine if they are equal.\n * It handles nested objects and arrays as well.\n * Array order is not taken into account.\n *\n * @param object\n * @param other\n * @returns\n */\nexport const isEqual = (object, other) => {\n    if (Array.isArray(object) && !Array.isArray(other)) {\n        return false;\n    }\n    if (!Array.isArray(object) && Array.isArray(other)) {\n        return false;\n    }\n    if (Array.isArray(object) && Array.isArray(other)) {\n        return (object.length === other.length &&\n            object.every((val, ix) => isEqual(val, other[ix])));\n    }\n    if (!isObject(object) || !isObject(other)) {\n        return object === other;\n    }\n    const objectKeys = Object.keys(object);\n    const otherKeys = Object.keys(other);\n    if (objectKeys.length !== otherKeys.length) {\n        return false;\n    }\n    return objectKeys.every(key => {\n        return (otherKeys.includes(key) &&\n            isEqual(object[key], other[key]));\n    });\n};\n"],"mappings":"AAAA;AACA;AACY,MAACA,KAAK,GAAIC,KAAK,IAAK;EAC5B,OAAOA,KAAK,KAAKC,SAAS,IAAID,KAAK,KAAK,IAAI;AAChD;AACY,MAACE,cAAc,GAAGA,CAACC,QAAQ,EAAEC,MAAM,KAAK;EAChD,OAAQL,KAAK,CAACI,QAAQ,CAAC,IAAIJ,KAAK,CAACK,MAAM,CAAC,IAAKD,QAAQ,KAAKC,MAAM;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACC,QAAQ,GAAIL,KAAK,IAAK;EAC/B,OAAOA,KAAK,IAAI,IAAI,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAACM,KAAK,CAACC,OAAO,CAACP,KAAK,CAAC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACQ,OAAO,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;EACtC,IAAIJ,KAAK,CAACC,OAAO,CAACE,MAAM,CAAC,IAAI,CAACH,KAAK,CAACC,OAAO,CAACG,KAAK,CAAC,EAAE;IAChD,OAAO,KAAK;EACpB;EACI,IAAI,CAACJ,KAAK,CAACC,OAAO,CAACE,MAAM,CAAC,IAAIH,KAAK,CAACC,OAAO,CAACG,KAAK,CAAC,EAAE;IAChD,OAAO,KAAK;EACpB;EACI,IAAIJ,KAAK,CAACC,OAAO,CAACE,MAAM,CAAC,IAAIH,KAAK,CAACC,OAAO,CAACG,KAAK,CAAC,EAAE;IAC/C,OAAQD,MAAM,CAACE,MAAM,KAAKD,KAAK,CAACC,MAAM,IAClCF,MAAM,CAACG,KAAK,CAAC,CAACC,GAAG,EAAEC,EAAE,KAAKN,OAAO,CAACK,GAAG,EAAEH,KAAK,CAACI,EAAE,CAAC,CAAC,CAAC;EAC9D;EACI,IAAI,CAACT,QAAQ,CAACI,MAAM,CAAC,IAAI,CAACJ,QAAQ,CAACK,KAAK,CAAC,EAAE;IACvC,OAAOD,MAAM,KAAKC,KAAK;EAC/B;EACI,MAAMK,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACR,MAAM,CAAC;EACtC,MAAMS,SAAS,GAAGF,MAAM,CAACC,IAAI,CAACP,KAAK,CAAC;EACpC,IAAIK,UAAU,CAACJ,MAAM,KAAKO,SAAS,CAACP,MAAM,EAAE;IACxC,OAAO,KAAK;EACpB;EACI,OAAOI,UAAU,CAACH,KAAK,CAACO,GAAG,IAAI;IAC3B,OAAQD,SAAS,CAACE,QAAQ,CAACD,GAAG,CAAC,IAC3BX,OAAO,CAACC,MAAM,CAACU,GAAG,CAAC,EAAET,KAAK,CAACS,GAAG,CAAC,CAAC;EAC5C,CAAK,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}