{"ast":null,"code":"import _objectSpread from \"/Users/saisaran/Desktop/BirdTag/UI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/saisaran/Desktop/BirdTag/UI/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"className\", \"dialCodeList\", \"isReadOnly\"];\nimport * as React from 'react';\nimport { countryDialCodes, classNames, ComponentClassName } from '@aws-amplify/ui';\nimport { SelectField } from '../SelectField/SelectField.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nconst DialCodeSelectPrimitive = (_ref, ref) => {\n  let {\n      className,\n      dialCodeList,\n      isReadOnly\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const dialList = dialCodeList !== null && dialCodeList !== void 0 ? dialCodeList : countryDialCodes;\n  const dialCodeOptions = React.useMemo(() => dialList.map(dialCode =>\n  // Regarding the `disabled` attribute, see comment in SelectField below\n  React.createElement(\"option\", {\n    key: dialCode,\n    value: dialCode,\n    disabled: isReadOnly\n  }, dialCode)), [dialList, isReadOnly]);\n  return React.createElement(SelectField\n  /*\n      Since <select> elements do not support the `readonly` html attribute, it is suggested to use the `disabled` html attribute\n      so that a screen reader will announce something to the user about the interactivity of the options list ( https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n    */, _objectSpread({\n    \"aria-disabled\": isReadOnly,\n    autoComplete: \"tel-country-code\",\n    className: classNames(ComponentClassName.CountryCodeSelect, ComponentClassName.DialCodeSelect, className),\n    labelHidden: true,\n    ref: ref\n  }, props), dialCodeOptions);\n};\nconst DialCodeSelect = primitiveWithForwardRef(DialCodeSelectPrimitive);\nDialCodeSelect.displayName = 'DialCodeSelect';\nexport { DialCodeSelect };","map":{"version":3,"names":["React","countryDialCodes","classNames","ComponentClassName","SelectField","primitiveWithForwardRef","DialCodeSelectPrimitive","_ref","ref","className","dialCodeList","isReadOnly","props","_objectWithoutProperties","_excluded","dialList","dialCodeOptions","useMemo","map","dialCode","createElement","key","value","disabled","_objectSpread","autoComplete","CountryCodeSelect","DialCodeSelect","labelHidden","displayName"],"sources":["/Users/saisaran/Desktop/BirdTag/UI/node_modules/@aws-amplify/ui-react/dist/esm/primitives/PhoneNumberField/DialCodeSelect.mjs"],"sourcesContent":["import * as React from 'react';\nimport { countryDialCodes, classNames, ComponentClassName } from '@aws-amplify/ui';\nimport { SelectField } from '../SelectField/SelectField.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n\nconst DialCodeSelectPrimitive = ({ className, dialCodeList, isReadOnly, ...props }, ref) => {\n    const dialList = dialCodeList ?? countryDialCodes;\n    const dialCodeOptions = React.useMemo(() => dialList.map((dialCode) => (\n    // Regarding the `disabled` attribute, see comment in SelectField below\n    React.createElement(\"option\", { key: dialCode, value: dialCode, disabled: isReadOnly }, dialCode))), [dialList, isReadOnly]);\n    return (React.createElement(SelectField\n    /*\n        Since <select> elements do not support the `readonly` html attribute, it is suggested to use the `disabled` html attribute\n        so that a screen reader will announce something to the user about the interactivity of the options list ( https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n      */\n    , { \"aria-disabled\": isReadOnly, autoComplete: \"tel-country-code\", className: classNames(ComponentClassName.CountryCodeSelect, ComponentClassName.DialCodeSelect, className), labelHidden: true, ref: ref, ...props }, dialCodeOptions));\n};\nconst DialCodeSelect = primitiveWithForwardRef(DialCodeSelectPrimitive);\nDialCodeSelect.displayName = 'DialCodeSelect';\n\nexport { DialCodeSelect };\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,EAAEC,UAAU,EAAEC,kBAAkB,QAAQ,iBAAiB;AAClF,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,uBAAuB,QAAQ,sCAAsC;AAE9E,MAAMC,uBAAuB,GAAGA,CAAAC,IAAA,EAAoDC,GAAG,KAAK;EAAA,IAA3D;MAAEC,SAAS;MAAEC,YAAY;MAAEC;IAAqB,CAAC,GAAAJ,IAAA;IAAPK,KAAK,GAAAC,wBAAA,CAAAN,IAAA,EAAAO,SAAA;EAC5E,MAAMC,QAAQ,GAAGL,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAIT,gBAAgB;EACjD,MAAMe,eAAe,GAAGhB,KAAK,CAACiB,OAAO,CAAC,MAAMF,QAAQ,CAACG,GAAG,CAAEC,QAAQ;EAClE;EACAnB,KAAK,CAACoB,aAAa,CAAC,QAAQ,EAAE;IAAEC,GAAG,EAAEF,QAAQ;IAAEG,KAAK,EAAEH,QAAQ;IAAEI,QAAQ,EAAEZ;EAAW,CAAC,EAAEQ,QAAQ,CAAE,CAAC,EAAE,CAACJ,QAAQ,EAAEJ,UAAU,CAAC,CAAC;EAC5H,OAAQX,KAAK,CAACoB,aAAa,CAAChB;EAC5B;AACJ;AACA;AACA,MAHI,EAAAoB,aAAA;IAII,eAAe,EAAEb,UAAU;IAAEc,YAAY,EAAE,kBAAkB;IAAEhB,SAAS,EAAEP,UAAU,CAACC,kBAAkB,CAACuB,iBAAiB,EAAEvB,kBAAkB,CAACwB,cAAc,EAAElB,SAAS,CAAC;IAAEmB,WAAW,EAAE,IAAI;IAAEpB,GAAG,EAAEA;EAAG,GAAKI,KAAK,GAAII,eAAe,CAAC;AAC3O,CAAC;AACD,MAAMW,cAAc,GAAGtB,uBAAuB,CAACC,uBAAuB,CAAC;AACvEqB,cAAc,CAACE,WAAW,GAAG,gBAAgB;AAE7C,SAASF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}