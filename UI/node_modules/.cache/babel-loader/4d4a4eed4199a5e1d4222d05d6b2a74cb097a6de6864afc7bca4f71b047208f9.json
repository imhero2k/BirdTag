{"ast":null,"code":"// Helper function to convert FileSystemFileEntry to File\nconst getFileFromEntry = fileEntry => {\n  return new Promise(resolve => {\n    fileEntry.file(resolve);\n  });\n};\n// Helper function to read all entries in a directory\nconst readAllDirectoryEntries = async dirReader => {\n  const entries = [];\n  let readBatch = [];\n  do {\n    readBatch = await new Promise((resolve, reject) => {\n      try {\n        dirReader.readEntries(resolve, reject);\n      } catch (error) {\n        reject(error);\n      }\n    });\n    entries.push(...readBatch);\n  } while (readBatch.length > 0);\n  return entries;\n};\n// Helper function to process files and folder contents\nasync function processDroppedItems(dataTransferItems) {\n  const files = [];\n  const processFileSystemEntry = async entry => {\n    if (entry.isFile) {\n      const file = await getFileFromEntry(entry);\n      // drag and dropped files do not have a webkitRelativePath property,\n      // but they do have a fullPath property which has the same information\n      // https://github.com/ant-design/ant-design/issues/16426\n      if (entry.fullPath && !file.webkitRelativePath) {\n        Object.defineProperties(file, {\n          webkitRelativePath: {\n            writable: true\n          }\n        });\n        // intentionally overwriting webkitRelativePath\n        // @ts-expect-error\n        file.webkitRelativePath = entry.fullPath.replace(/^\\//, '');\n        Object.defineProperties(file, {\n          webkitRelativePath: {\n            writable: false\n          }\n        });\n      }\n      files.push(file);\n    } else if (entry.isDirectory) {\n      const dirReader = entry.createReader();\n      const dirEntries = await readAllDirectoryEntries(dirReader);\n      await Promise.all(dirEntries.map(processFileSystemEntry));\n    }\n  };\n  // Filter out and process files from the data transfer items\n  await Promise.all(dataTransferItems.reduce((acc, item) => {\n    const entry = item.webkitGetAsEntry();\n    return item.kind === 'file' && entry ? [...acc, entry] : acc;\n  }, []).map(processFileSystemEntry));\n  return files;\n}\nexport { processDroppedItems };","map":{"version":3,"names":["getFileFromEntry","fileEntry","Promise","resolve","file","readAllDirectoryEntries","dirReader","entries","readBatch","reject","readEntries","error","push","length","processDroppedItems","dataTransferItems","files","processFileSystemEntry","entry","isFile","fullPath","webkitRelativePath","Object","defineProperties","writable","replace","isDirectory","createReader","dirEntries","all","map","reduce","acc","item","webkitGetAsEntry","kind"],"sources":["/Users/saisaran/Desktop/BirdTag/UI/node_modules/@aws-amplify/ui-react-core/dist/esm/utils/processDroppedItems.mjs"],"sourcesContent":["// Helper function to convert FileSystemFileEntry to File\nconst getFileFromEntry = (fileEntry) => {\n    return new Promise((resolve) => {\n        fileEntry.file(resolve);\n    });\n};\n// Helper function to read all entries in a directory\nconst readAllDirectoryEntries = async (dirReader) => {\n    const entries = [];\n    let readBatch = [];\n    do {\n        readBatch = await new Promise((resolve, reject) => {\n            try {\n                dirReader.readEntries(resolve, reject);\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n        entries.push(...readBatch);\n    } while (readBatch.length > 0);\n    return entries;\n};\n// Helper function to process files and folder contents\nasync function processDroppedItems(dataTransferItems) {\n    const files = [];\n    const processFileSystemEntry = async (entry) => {\n        if (entry.isFile) {\n            const file = await getFileFromEntry(entry);\n            // drag and dropped files do not have a webkitRelativePath property,\n            // but they do have a fullPath property which has the same information\n            // https://github.com/ant-design/ant-design/issues/16426\n            if (entry.fullPath && !file.webkitRelativePath) {\n                Object.defineProperties(file, {\n                    webkitRelativePath: {\n                        writable: true,\n                    },\n                });\n                // intentionally overwriting webkitRelativePath\n                // @ts-expect-error\n                file.webkitRelativePath = entry.fullPath.replace(/^\\//, '');\n                Object.defineProperties(file, {\n                    webkitRelativePath: {\n                        writable: false,\n                    },\n                });\n            }\n            files.push(file);\n        }\n        else if (entry.isDirectory) {\n            const dirReader = entry.createReader();\n            const dirEntries = await readAllDirectoryEntries(dirReader);\n            await Promise.all(dirEntries.map(processFileSystemEntry));\n        }\n    };\n    // Filter out and process files from the data transfer items\n    await Promise.all(dataTransferItems\n        .reduce((acc, item) => {\n        const entry = item.webkitGetAsEntry();\n        return item.kind === 'file' && entry ? [...acc, entry] : acc;\n    }, [])\n        .map(processFileSystemEntry));\n    return files;\n}\n\nexport { processDroppedItems };\n"],"mappings":"AAAA;AACA,MAAMA,gBAAgB,GAAIC,SAAS,IAAK;EACpC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC5BF,SAAS,CAACG,IAAI,CAACD,OAAO,CAAC;EAC3B,CAAC,CAAC;AACN,CAAC;AACD;AACA,MAAME,uBAAuB,GAAG,MAAOC,SAAS,IAAK;EACjD,MAAMC,OAAO,GAAG,EAAE;EAClB,IAAIC,SAAS,GAAG,EAAE;EAClB,GAAG;IACCA,SAAS,GAAG,MAAM,IAAIN,OAAO,CAAC,CAACC,OAAO,EAAEM,MAAM,KAAK;MAC/C,IAAI;QACAH,SAAS,CAACI,WAAW,CAACP,OAAO,EAAEM,MAAM,CAAC;MAC1C,CAAC,CACD,OAAOE,KAAK,EAAE;QACVF,MAAM,CAACE,KAAK,CAAC;MACjB;IACJ,CAAC,CAAC;IACFJ,OAAO,CAACK,IAAI,CAAC,GAAGJ,SAAS,CAAC;EAC9B,CAAC,QAAQA,SAAS,CAACK,MAAM,GAAG,CAAC;EAC7B,OAAON,OAAO;AAClB,CAAC;AACD;AACA,eAAeO,mBAAmBA,CAACC,iBAAiB,EAAE;EAClD,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,sBAAsB,GAAG,MAAOC,KAAK,IAAK;IAC5C,IAAIA,KAAK,CAACC,MAAM,EAAE;MACd,MAAMf,IAAI,GAAG,MAAMJ,gBAAgB,CAACkB,KAAK,CAAC;MAC1C;MACA;MACA;MACA,IAAIA,KAAK,CAACE,QAAQ,IAAI,CAAChB,IAAI,CAACiB,kBAAkB,EAAE;QAC5CC,MAAM,CAACC,gBAAgB,CAACnB,IAAI,EAAE;UAC1BiB,kBAAkB,EAAE;YAChBG,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC;QACF;QACA;QACApB,IAAI,CAACiB,kBAAkB,GAAGH,KAAK,CAACE,QAAQ,CAACK,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QAC3DH,MAAM,CAACC,gBAAgB,CAACnB,IAAI,EAAE;UAC1BiB,kBAAkB,EAAE;YAChBG,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC;MACN;MACAR,KAAK,CAACJ,IAAI,CAACR,IAAI,CAAC;IACpB,CAAC,MACI,IAAIc,KAAK,CAACQ,WAAW,EAAE;MACxB,MAAMpB,SAAS,GAAGY,KAAK,CAACS,YAAY,CAAC,CAAC;MACtC,MAAMC,UAAU,GAAG,MAAMvB,uBAAuB,CAACC,SAAS,CAAC;MAC3D,MAAMJ,OAAO,CAAC2B,GAAG,CAACD,UAAU,CAACE,GAAG,CAACb,sBAAsB,CAAC,CAAC;IAC7D;EACJ,CAAC;EACD;EACA,MAAMf,OAAO,CAAC2B,GAAG,CAACd,iBAAiB,CAC9BgB,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IACvB,MAAMf,KAAK,GAAGe,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACrC,OAAOD,IAAI,CAACE,IAAI,KAAK,MAAM,IAAIjB,KAAK,GAAG,CAAC,GAAGc,GAAG,EAAEd,KAAK,CAAC,GAAGc,GAAG;EAChE,CAAC,EAAE,EAAE,CAAC,CACDF,GAAG,CAACb,sBAAsB,CAAC,CAAC;EACjC,OAAOD,KAAK;AAChB;AAEA,SAASF,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}